#include <iostream>
#include <ctime>
void PrintIntroduction(int Difficulty)
{
    // Introduction messages 
    std ::cout << "\n\nYou are a master hacker, that works for the Mafia." << std::endl;   
    std ::cout << "You need to enter a series of codes that will open up an encrypted vault filled with gold. \n You are on vault stage" << Difficulty;
}

bool PlayGame(int Difficulty)
{
    PrintIntroduction(Difficulty);

    // Declare codes
    const int CodeA = rand() % Difficulty + Difficulty;
    const int CodeB = rand() % Difficulty + Difficulty;
    const int CodeC = rand() % Difficulty + Difficulty;
 
    // Print sum and prod 
    const int CodeSum =  CodeA + CodeB + CodeC;
    const int CodeProd = CodeA * CodeB * CodeC;
 
    std ::cout << std::endl;
    std ::cout << "There are 3 numbers in the code" << std::endl;
    std ::cout << "The codes add-up to: " << CodeSum << std::endl;
    std ::cout << "The codes multiply up to: " << CodeProd << std::endl;
 
    // Gathering user input for their guess on the code
    int GuessA, GuessB, GuessC;
    std ::cin >> GuessA;
    std ::cin >> GuessB;
    std ::cin >> GuessC;
 
    const int GuessSum = GuessA + GuessB + GuessC;
    const int GuessProd = GuessA * GuessB * GuessC;
    
    if (GuessSum == CodeSum && GuessProd == CodeProd)
    {
        std ::cout << "Processing... Next Stage Unlocked" << std::endl;
        return true;
    }
    else
    {
        std ::cout << "Processing... SYSTEM FAILURE! Re-enter Code" << std::endl;
        return false;
    }
}

int main()
{
    srand(time(NULL)); // create new random sequance based on time of day

    int LevelDifficulty = 1;
    const int Max = 5;
    while (LevelDifficulty <= Max);
    {
        bool bComplete = PlayGame(LevelDifficulty);
        std::cin.clear(); // Clear any errors
        std::cin.ignore(); // Discards the buffer

        if(bComplete) 
        {
            ++LevelDifficulty;
        }
            
    }
    std::cout << "\n Proccessing... Opening Vault... ACCESS GRANTED";


    return 0;
}

